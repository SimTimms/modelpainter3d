/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.3 public/shoulder_termie_left.gltf
*/

import React, { useState, useRef, useEffect } from 'react';
import { paints } from '../paints.js';

export function Mesh(props) {
  const { baseColor } = props;
  const [colours, setColours] = useState(null);
  const [base, setBase] = useState(null);
  const canPaint = useRef(true);
  useEffect(() => {
    if (props.paintRef && props.paintRef.current[props.name]) {
      setColours(props.paintRef.current[props.name]);
    }
  }, [props.paintRef]);

  useEffect(() => {
    setBase(baseColor);
  }, [baseColor]);

  if (!base) return null;
  return (
    <>
      <mesh
        visible={props.show ? true : false}
        geometry={props.nodeGeometry}
        position={props.position}
        onPointerUp={(event) => {
          if (canPaint.current) {
            event.stopPropagation();
            setColours(props.currentPaint ? props.currentPaint : '#ff0000');
            if (props.paintRef) {
              props.paintRef.current[props.name] = props.currentPaint
                ? props.currentPaint
                : '#ff0000';
            }
          }
        }}
        castShadow={true}
        receiveShadow={true}
        onPointerDown={() => (canPaint.current = true)}
        onPointerMove={() => (canPaint.current = false)}
        material={props.material}
      >
        <meshStandardMaterial
          attach="material"
          color={!colours ? base.color : colours.color}
          metalness={colours && colours.metal ? 1.1 : 0}
          roughness={colours && colours.metal ? 0.6 : 1}
        />
      </mesh>
    </>
  );
}
