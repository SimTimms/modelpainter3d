/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.3 public/skeleton.gltf
*/

import React, { useEffect, useState } from 'react';
import { useGLTF } from '@react-three/drei';

export function ModelImport(props) {
  const [newNodeArr, setNewNodeArr] = useState(null);
  const { nodes } = useGLTF(
    'https://model-painter.s3.eu-west-2.amazonaws.com/skeleton.gltf'
  );

  useEffect(() => {
    setNewNodeArr({
      armature: nodes.Armature.clone(),
      core: nodes.Core.clone(),
      upperArmL: nodes.UpperArmL.clone(),
      upperArmR: nodes.UpperArmR.clone(),
      bone008: nodes.Bone008.clone(),
      spine: nodes.Spine.clone(),
    });
  }, [nodes]);

  if (!newNodeArr) return null;
  return (
    <group>
      <group {...props} position={props.position}>
        <group position={[1, -38, 0]} rotation={[0, 1.4 * Math.PI, 0]}>
          {props.base}
        </group>
        <group position={[-2, -28, -2]} rotation={[0, 1.4 * Math.PI, 0]}>
          <primitive
            object={newNodeArr.armature}
            rotation={[0, props.torsoTopBone * Math.PI, 0]}
          >
            <primitive object={newNodeArr.core}>
              <primitive
                rotation={[props.armRRot + 0, 0, 0]}
                position={[-11.4, -1, -4]}
                object={newNodeArr.upperArmR}
              >
                <group
                  position={[11.4, -9, 0]}
                  rotation={[0 * Math.PI, 0 * Math.PI, 0 * Math.PI]}
                >
                  {props.armR}
                </group>
              </primitive>

              <group position={[0, -9.8, -4.0]}>{props.torso}</group>
            </primitive>
          </primitive>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload(
  'https://model-painter.s3.eu-west-2.amazonaws.com/skeleton.gltf'
);
